# .github/workflows/streamlit-app.yml
name: Streamlit app

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  streamlit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Check streamlit app
        uses: streamlit/streamlit-app-action@v0.0.3
        with:
          app-path: app.py

      - name: Copy files via ssh and deploy latest
        uses: appleboy/ssh-action@v1.0.3
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
        with:
          host: ${{ secrets.AZURE_HOST }}
          username: ${{ secrets.AZURE_USERNAME }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          envs: DB_HOST, DB_USER, DB_PASSWORD, DB_DATABASE, WEATHER_API_KEY
          script: |
            container_exists=$(docker ps -a --filter "name=streamlit_container" --format '{{.Names}}')
            if [ ! -z "$container_exists" ]; then
              docker stop streamlit_container
              docker rm streamlit_container
            fi
            cd /home/victorgoh/
            curl -O https://raw.githubusercontent.com/EricKim9724/SunSmarter/main/Dockerfile
            docker build --no-cache -t streamlit:latest .
            docker run -d \
              -e DB_HOST=$DB_HOST \
              -e DB_USER=$DB_USER \
              -e DB_PASSWORD=$DB_PASSWORD \
              -e DB_DATABASE=$DB_DATABASE \
              -e WEATHER_API_KEY=$WEATHER_API_KEY \
              -p 8501:8501 \
              --name streamlit_container streamlit:latest
